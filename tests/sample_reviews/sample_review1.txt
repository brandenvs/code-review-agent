------------------------------------------------------------------------------------------
----------------------------------------- REVIEW -----------------------------------------
------------------------------------------------------------------------------------------
Student: Harry Nolan
Task name: Task 6 - Programming with User-defined Functions
Course: DfE - Data Science (Fundamentals)

Date Submitted: 30 December 2024
Date Reviewed: 31 December 2024
Review ID: BSHN311224-2198
------------------------------------------------------------------------------------------

Efficiency: 4.0


Completeness: 4.0


Style: 4.0


Documentation: 4.0


Positive
Hey, Harry.

Thank you for submitting your task on User-defined Functions in Python.

Your holiday cost tracker implements user-defined functions(car_rental, hotel_cost, and plane_cost), which perform appropriate calculations based on the passed parameters. The user input for city_glight is also normalised, and you've nested numerical inputs with type integer. This enhances your application's usability and makes the application more robust to unexpected input.


Improve
Consider using error handling with your numerical inputs to prevent your application from throwing an explicit error when a string is inputted rather than an integer. You can surround your input functions with a try-except statement to do this. Please see the following example code: https://www.geeksforgeeks.org/input-validation-in-python/

Another improvement is associated with your code documentation. In Python, we have two types of code documentation: a block comment, which is the one you have used and starts with a hashtag, and then we have docstrings. I recommend using docstrings to document your user-defined functions effectively. Additionally, kindly go through the following PEP 8 resource to familiarise yourself with docstrings and their use cases.

PEP 8 resource
ðŸ”— https://peps.python.org/pep-0008/#comments


Overall
Overall, you've shown a good ability with user-defined functions and have effectively combined the results within a user-defined function, which then outputs the total cost. Well done, Harry. Keep up the good work.



------------------------------------------------------------------------------------------